/* apply a natural box layout model to all elements, but allowing components to change */
html {
  box-sizing: border-box;
  }
  *, *:before, *:after {
    box-sizing: inherit;
}

body {
    font-family: sans-serif;
    line-height: 1.4;
    background-color: #efefef;
    padding: 0;
    margin: 0;
    font-size: 16px;
}

.wrapper {
    perspective: 1000px;
    background-color: rgba(0, 0, 0, 0.2);
    color: white;
    text-shadow: 0px 0px 3px rgba(0, 0, 0, 0.4);
    opacity: 0;
    transition: opacity .15s ease;
    padding: 1em;
}

li.active .wrapper {
    opacity: 1;
}


// Padding of grid
$padding: 0px;
// Margin between items
$listItemMargin: 0px;

ul.grid {
    display: flex;
    margin: 0;
    // Subtract inner Margin from Padding to align grid with text
    padding: 0 calc(#{$padding} - #{$listItemMargin});
    flex-wrap: wrap;

    li {
        display: flex;
        flex-direction: column;
        list-style: none;
        background-color: white;
        width: calc(12.5% - #{$listItemMargin*2});
        height: calc(12.5vw - #{$padding}/4 - #{$listItemMargin}*2);
        margin: $listItemMargin;

        @media (max-width: 1000px) {
            width: calc(25% - #{$listItemMargin*2});
            height: calc(25vw - #{$padding}/2 - #{$listItemMargin}*2);
        }

        @media (max-width: 800px) {
            width: calc(50% - #{$listItemMargin*2});
            height: calc(50vw - #{$padding} - #{$listItemMargin}*2);
        }

        @media (max-width: 600px) {
            width: calc(100% - #{$listItemMargin}*2);
            height: calc(100vw - #{$padding}*2 - #{$listItemMargin}*2);
        }

    }

    // Optional property if item should be zoom on hover
    &.zoom {
        li {
            transition: transform 0.15s cubic-bezier(.77,0,.18,1);

            &.active {
                transform: scale(1.1); 
                box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.4);
                z-index: 1;
            }
        }
    }
}


